state: 동적인 값

Hooks라는 기능 도입으로 함수형 컴포넌트에서도 상태를 관리할 수 있게 됨.

useState: 함수형 컴포넌트에 상태를 추가할 수 있게 하는 Hook
그 상태가 변경될 때마다 컴포넌트를 다시 렌더링함.

useState는 배열을 반환함.
1. 상태 변수, 2. 상태를 변경할 수 있는 함수


setNumber(preNum => preNum + 1): 함수형 업데이트

원래 옆과 같이 업데이트할 새로운 값을 넣어주는 게 기본. setNumber(number + 1)

하지만 함수형 업데이트를 사용할 수도 있음.
setNumber가 number를 preNum으로 가져와 사용하는 것


input 태그 값 관리
input 태그가 여러개일 때? useState나 onChange를 여러 개 만드는 대신,

각 태그에 name 값을 설정 후 이벤트가 발생 시 이를 참조하여 상태 값을 관리하는 게
좋음.
여러 개의 state를 관리하므로 useState 함수는 객체 형태를 받아야 함.

const onChange = (e) => {
        const {value, name} = e.target;
        setInputs({
            //아래와 같은 과정을 거치고 그 값으로 상태를 업데이트하는 함수
            ...inputs,
            [name]: value
        });
        //리액트에서 객체 수정 시 inputs[name] = value와 같이 직접 수정은 금물.
        //전개 연산자로 객체를 복사하고 이 새로운 객체에서 업데이트를 해줘야 함.
    };//위와 같은 것을 불변성을 지킨다고 함.

1. 이벤트가 발생한 곳에서 name 및 value 값을 받아 저장
2. 함수를 통해 값 재랜더링
...inputs >> 객체를 복사한다.
[name]:  value >>복사된 객체의 값을 변경한다.
그 후 위의 상태로 업데이트한다.